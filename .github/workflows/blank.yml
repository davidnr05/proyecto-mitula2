name: CI/CD Mitula Scraper

on:
  push:
    branches:
      - master  # Se ejecutará en cada push a la rama "main"
  pull_request:
    branches:
      - master  # También se ejecutará en cada PR a "main"

jobs:
  lint:
    name: Revisión de Código con flake8
    runs-on: ubuntu-latest

    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Instalar dependencias
        run: pip install flake8

      - name: Revisar código con flake8
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

  test:
    name: Ejecutar Pruebas Unitarias
    runs-on: ubuntu-latest
    needs: lint  # Se ejecuta después de la revisión de código

    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Instalar dependencias
        run: pip install -r requirements.txt pytest pytest-mock boto3 requests beautifulsoup4

      - name: Ejecutar pruebas unitarias con pytest
        run: pytest test_scraper.py --maxfail=1 --disable-warnings

  deploy:
    name: Desplegar en AWS con Zappa
    runs-on: ubuntu-latest
    needs: test  # Se ejecuta solo si las pruebas pasan

    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Instalar Zappa y dependencias
        run: pip install -r requirements.txt zappa

      - name: Configurar credenciales de AWS
        run: |
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> ~/.aws/credentials
          echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials

      - name: Desplegar en AWS con Zappa
        run: zappa update dev

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
